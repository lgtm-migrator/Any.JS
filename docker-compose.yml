version: '3.2'

services:
  databaseprimary:
    image: "bitnami/mongodb:3.6.17-ol-7-r26"
    ports:
      - "27017:27017"
    environment:
      - MONGODB_ROOT_PASSWORD=owl45#21
      - MONGODB_ADVERTISED_HOSTNAME=databaseprimary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=anyjs-db
    volumes:
      - "database:/bitnami"
    networks:
      - database
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  databasesecondary:
    image: "bitnami/mongodb:3.6.17-ol-7-r26"
    depends_on:
      - databaseprimary
    environment:
      - MONGODB_PRIMARY_HOST=databaseprimary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PRIMARY_ROOT_PASSWORD=owl45#21
      - MONGODB_ADVERTISED_HOSTNAME=databasesecondary
      - MONGODB_REPLICA_SET_NAME=anyjs-db
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_MODE=secondary
    networks:
      - database
    deploy:
      placement:
        constraints:
          - "node.role==worker"

  databasearbiter:
    image: "bitnami/mongodb:3.6.17-ol-7-r26"
    depends_on:
      - databaseprimary
    environment:
      - MONGODB_PRIMARY_HOST=databaseprimary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PRIMARY_ROOT_PASSWORD=owl45#21
      - MONGODB_ADVERTISED_HOSTNAME=databasearbiter
      - MONGODB_REPLICA_SET_KEY=replicasetkey
      - MONGODB_REPLICA_SET_NAME=anyjs-db
      - MONGODB_REPLICA_SET_MODE=arbiter

    networks:
      - database
    deploy:
      placement:
        constraints:
          - "node.role==worker"

  server:
    image: lucasurzedo/anyjs:1.0
    depends_on:
      - databaseprimary
    deploy:
      placement:
        constraints:
          - "node.role==worker"
    environment:
      NODE_ENV: development
    ports:
      - "4445:4445"

  observer:
    image: lucasurzedo/anyjsobserver:1.0
    deploy:
      placement:
        constraints:
          - "node.role==worker"
    ports:
      - "4447:4447"

  gatewayapi:
    image: devopsfaith/krakend:2
    volumes:
      - ./src/microservices/krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "80:8080"
      - "8090:8090"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]

  agent:
    image: portainer/agent:linux-amd64-2.1.0-alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer
    deploy:
      mode: global
      placement:
        constraints:
          - "node.platform.os==linux"

  portainer:
    image: portainer/portainer-ce:2.1.1-alpine
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer:/data
    networks:
      - portainer
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"

networks:
  portainer:
  database:

volumes:
  database:
  anyjs:
  portainer:
