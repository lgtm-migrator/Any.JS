version: '3.2'

services:
  db:
    image: mongo:latest
    deploy:
      placement:
        constraints:
          - "node.role==manager"
      restart_policy:
          condition: none
    volumes:
      - "mongodb:/mongodb"
    ports:
      - "27017:27017"

  server:
    image: lucasurzedo/anyjs:1.0
    deploy:
      placement:
        constraints:
          - "node.role==worker"
    environment:
      NODE_ENV: development
    ports:
      - "4445:4445"

  observer:
    image: lucasurzedo/anyjsobserver:1.0
    deploy:
      placement:
        constraints:
          - "node.role==worker"
    ports:
      - "4447:4447"

  gatewayapi:
    image: devopsfaith/krakend:1.2.0
    volumes:
      - "./microservices/krakend:/etc/krakend"
    ports:
      - "80:8080"
      - "8090:8090"
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    networks:
      - database

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "7000:8000"
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

networks:
  database:
  agent_network:
    driver: overlay
    attachable: true

volumes:
  portainer_data:
  mongodb:
  anyjs: